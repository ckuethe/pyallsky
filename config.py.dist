import cv2 # только если цветная камера

name = 'Имя Фамилия'

#logo = {
#	'logoFileName':	 '/sdcard/html/allsky_logo.jpg',
#}

ccd = {
	'name':		'ZWO CCD ASI178MC',
	'binning':	2,
	'avgMin':	55,
	'avgMax':	150,
	'expMin':	0.0001,
	'expMax':	45.,
	'bits':		16,
	'cfa':		cv2.COLOR_BayerBG2RGB, # только если цветная камера
}

# варианты дебаеризации
#  cv2.COLOR_BayerBG2RGB
#  cv2.COLOR_BayerGB2RGB
#  cv2.COLOR_BayerRG2RGB
#  cv2.COLOR_BayerGR2RGB


publish = {
#	'jpg':		'https://oleg.milantiev.com/allsky/publish/jpg/',	# публикация каждого jpg на другой сайт
}

processing = {
#	'ROI': {
#		'x0':800,
#		'x1':3100,
#		'y0':0,
#		'y1':2179,
#	},
#	'wb' : 'gain',					# gain - вручную, simple - SimpleWB из OpenCV, gray - GreyworldWB
#	'wb_gains' : {
#		'r':0.85,
#		'g': 0.65,
#		'b':0.990,
#	},
	'ccdAvgMin':0.13,
	'ccdAvgMax':0.87,
}

sensors = {
	'bme280': {					# Два датчика BME280. 0 и 1
		0: 'Улица',
		1: 'Купол'
	},
	'ads1115': {					# 4 канала АЦП ADS1115
		0: {
			'name': '24В',
			'divider': 716.4,
		},
		1: {
			'name': '12В',
			'divider': 800,
		},
	}
}

keogram = {
	'column':	640,					# колонка 640 каждого кадра будет строить keogram
	'height':	960,					# высота итогового изображения keogram. Обычно совпадает с высотой исходного кадра
}

timestamp = [
	{
		'format':	'%d.%m.%Y',			# Формат строки
		'x':		0,					# координаты ЛВУ. В пикселях
		'y':		0,
		'size':		30,					# размер шрифта
		'color':	(255,255,255,128),	# цвет букв
	},
	{
		'format':	'%H:%M',
		'x':		0,
		'y':		35,
		'size':		30,
		'color':	(255,255,255,255),
	},
]

picture_acquisition = [
#	{
#		'format':	'%d',			# Формат строки
#		'x':		0,					# координаты ЛВУ. В пикселях
#		'y':		100,
#		'size':		20,					# размер шрифта
#		'color':	(255,255,255,128),	# цвет букв
#	},
#	{
#		'format':	'%.4f',
#		'x':		0,
#		'y':		120,
#		'size':		20,
#		'color':	(255,255,255,128),
#	},
]

archive = {
	'days':		7,				# Хранить архив жпегов 7 дней
	'sensors':	30,				# Хранить архив данных сенсоров 30 дней
}

fits = {
	'days':		3,				# хранить архив fit-снимков 3 дня
}

video = {
	'width':	1024,
	'height':	768,
	'days':		30,				# Хранить 30 дней mp4
}

# http://integrator.adior.ru/index.php/orangepi/478-orange-pi-gpio-sysfs
relay = [
	{
		'name':		'Реле 1',
		'gpio':		'17',		# '/sys/class/gpio/gpio17/value',
		'hotter':	'yes',		# это реле - обогрев подкупольного
		'limiTemp':	29.5,		# предельная температура подкупольного пространства, выше которой обогрев не включается
	},
	{
		'name':		'Реле 2',
		'gpio':		'18',
	},
]

db = {
	'host':		'localhost',
	'user':		'root',
	'passwd':	'master',
	'database':	'allsky',
}

path = {
	'web':		'/var/www/html/',
	'ffmpeg':	'/usr/bin/ffmpeg',
}

import logging

log = {
	'path':		'/var/log/allsky.log',
	'level':	logging.DEBUG,
}


### дальше не править

if (path['web'][-1] != '/'):
	path['web'] += '/'

path['snap'] = path['web'] +'snap/'
path['keogram'] = path['web'] +'keogram/'
path['video'] = path['web'] +'video/'
path['video-demand'] = path['web'] +'video-demand/'
path['fits'] = path['web'] + 'fits/'
